<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liupeng.project_doc.dao.ProjectTableDao">

    <resultMap type="com.liupeng.project_doc.entity.ProjectTable" id="ProjectTableMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="projectName" column="project_name" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="startDate" column="start_date" jdbcType="VARCHAR"/>
        <result property="endDate" column="end_date" jdbcType="VARCHAR"/>
        <result property="isDelete" column="is_delete" jdbcType="INTEGER"/>
        <result property="projectAbstruct" column="project_abstruct" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="ProjectTableMap">
        select id,
               project_name,
               user_id,
               start_date,
               end_date,
               is_delete,
               project_abstruct
        from program_doc.project_table
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="ProjectTableMap">
        select id,
               project_name,
               user_id,
               start_date,
               end_date,
               is_delete,
               project_abstruct
        from program_doc.project_table limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="ProjectTableMap">
        select id,
               project_name,
               user_id,
               start_date,
               end_date,
               is_delete,
               project_abstruct
        from program_doc.project_table
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into program_doc.project_table(project_name, user_id, start_date, end_date, is_delete, project_abstruct)
        values (#{projectName}, #{userId}, #{startDate}, #{endDate}, #{isDelete}, #{projectAbstruct})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into program_doc.project_table(project_name, user_id, start_date, end_date, is_delete, project_abstruct)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.projectName}, #{entity.userId}, #{entity.startDate}, #{entity.endDate}, #{entity.isDelete},
            #{entity.projectAbstruct})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into program_doc.project_table(project_name, user_id, start_date, end_date, is_delete, project_abstruct)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.projectName}, #{entity.userId}, #{entity.startDate}, #{entity.endDate}, #{entity.isDelete},
            #{entity.projectAbstruct})
        </foreach>
        on duplicate key update
        project_name = values(project_name) , user_id = values(user_id) , start_date = values(start_date) , end_date =
        values(end_date) , is_delete = values(is_delete) , project_abstruct = values(project_abstruct)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update program_doc.project_table
        <set>
            <if test="projectName != null and projectName != ''">
                project_name = #{projectName},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="startDate != null and startDate != ''">
                start_date = #{startDate},
            </if>
            <if test="endDate != null and endDate != ''">
                end_date = #{endDate},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete},
            </if>
            <if test="projectAbstruct != null and projectAbstruct != ''">
                project_abstruct = #{projectAbstruct},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from program_doc.project_table
        where id = #{id}
    </delete>

</mapper>

