<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liupeng.project_doc.dao.UserTableDao">

    <resultMap type="com.liupeng.project_doc.entity.UserTable" id="UserTableMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="phonenumber" column="phoneNumber" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="isDelete" column="is_delete" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserTableMap">
        select id,
               user_name,
               password,
               phoneNumber,
               email,
               is_delete
        from program_doc.user_table
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserTableMap">
        select id,
               user_name,
               password,
               phoneNumber,
               email,
               is_delete
        from program_doc.user_table limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="UserTableMap">
        select id,
               user_name,
               password,
               phoneNumber,
               email,
               is_delete
        from program_doc.user_table
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into program_doc.user_table(user_name, password, phoneNumber, email, is_delete)
        values (#{userName}, #{password}, #{phonenumber}, #{email}, #{isDelete})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into program_doc.user_table(user_name, password, phoneNumber, email, is_delete)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userName}, #{entity.password}, #{entity.phonenumber}, #{entity.email}, #{entity.isDelete})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into program_doc.user_table(user_name, password, phoneNumber, email, is_delete)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userName}, #{entity.password}, #{entity.phonenumber}, #{entity.email}, #{entity.isDelete})
        </foreach>
        on duplicate key update
        user_name = values(user_name) , password = values(password) , phoneNumber = values(phoneNumber) , email =
        values(email) , is_delete = values(is_delete)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update program_doc.user_table
        <set>
            <if test="userName != null and userName != ''">
                user_name = #{userName},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="phonenumber != null and phonenumber != ''">
                phoneNumber = #{phonenumber},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from program_doc.user_table
        where id = #{id}
    </delete>

</mapper>

